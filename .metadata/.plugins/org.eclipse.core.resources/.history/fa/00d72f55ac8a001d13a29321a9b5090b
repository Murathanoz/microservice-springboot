package com.order.orderservice.service;

import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.reactive.function.client.WebClient;

import com.order.orderservice.dto.OrderLineItemsDto;
import com.order.orderservice.dto.OrderRequest;
import com.order.orderservice.model.Order;
import com.order.orderservice.model.OrderLineItems;
import com.order.orderservicerepository.OrderRepository;

import lombok.AllArgsConstructor;
import lombok.RequiredArgsConstructor;

@Service
@Transactional
//@RequiredArgsConstructor
public class OrderServiceImpl implements OrderService{
	
	private WebClient webClient;
	private  OrderRepository orderRepository;
	public OrderServiceImpl(OrderRepository orderRepository, WebClient webClient) {
		super();
		this.orderRepository = orderRepository;
		this.webClient=webClient;
	}
	
	private OrderLineItems mapToDto(OrderLineItemsDto orderLineItemsDto) {
		OrderLineItems orderLineItems =new OrderLineItems();
		orderLineItems.setPrice(orderLineItemsDto.getPrice());
		orderLineItems.setQuantity(orderLineItemsDto.getQuantity());
		orderLineItems.setCode(orderLineItemsDto.getCode());
		return orderLineItems;
	}

	public void placeOrder(OrderRequest orderRequest) {		
			Order order=new Order();
			order.setOrderNumber(UUID.randomUUID().toString());
			
			List<OrderLineItems> orderLineItems=orderRequest.getOrderLineItemsDtoList()
			.stream()
			.map(this::mapToDto)
			.toList();
			
			 order.setOrderLineItems(orderLineItems);
			 
			 order.getOrderLineItems().stream()
			 .map(OrderLineItems::getCode()).toList();
			// call inventory service
			 boolean result=webClient.get()
			.uri("http://localhost:8082/api/inventory")
			.retrieve()
			.bodyToMono(Boolean.class)
			.block();
			 
			 if(result) {
					orderRepository.save(order);
			 }
			 else {
				 throw new IllegalArgumentException("Product is not in stock..!");
			 }
		}

}
